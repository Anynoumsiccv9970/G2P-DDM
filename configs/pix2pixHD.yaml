
# experiment specifics

name: label2city
gpu_ids: 0
norm: instance    # 'instance normalization or batch normalization'
use_dropout: True # 'use dropout for the generator'


# input/output sizes       
batchSize: 2
loadSize: 1024    # 'scale images to this size'
fineSize: 512     # 'then crop to this size'
label_nc: 6       # '# of input image channels'
output_nc: 3      # '# of output image channels'

# for setting inputs
dataroot: './datasets/cityscapes/' 
resize_or_crop: 'scale_width'   # 'scaling and cropping of images at load time [resize_and_crop|crop|scale_width|scale_width_and_crop]'
serial_batches: True            # 'if true, takes images in order to make batches, otherwise takes them randomly'
no_flip: True                   # 'if specified, do not flip the images for data argumentation'
nThreads: 2                     # '# threads for loading data'
max_dataset_size: float("inf")  # Maximum number of samples allowed per dataset. If the dataset directory contains more than max_dataset_size, only a subset is loaded.'

# for displays
display_winsize: 512            # display window size
tf_log: False                   # if specified, use tensorboard logging. Requires tensorflow installed

# for generator
netG: global                    # 'selects model to use for netG'
ngf: 64                         # '# of gen filters in first conv layer'
n_downsample_global: 4          # 'number of downsampling layers in netG'
n_blocks_global: 9              # 'number of residual blocks in the global generator network'
n_blocks_local: 3               # 'number of residual blocks in the local enhancer network'
n_local_enhancers: 1            # 'number of local enhancers to use'
niter_fix_global: 0             # 'number of epochs that we only train the outmost local enhancer'

# for instance-wise features






